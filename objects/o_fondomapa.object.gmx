<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = room_height;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//este objeto dibuja cosas a nivel del suelo, bajo todo
draw_set_alpha(0.4);

draw_rectangle_colour(144, 432, room_width - 144, room_height - 144,
    c_maroon, c_maroon, c_maroon, c_maroon, true);

with o_auravida
{
    draw_circle_colour(x, y, m_auravida, c_white, c_white, true);
}

with o_player
{
    if origen.clase == m_apoyo and estado == esta_howitzer
    {
        draw_circle_colour(x, y, m_maxfoco * 2.5, c_dkgray, c_dkgray, true);
    }
}

if o_game.displei &gt;= 1
{
    with o_foco
    {
        if instance_exists(invocador)
        {
            var dir = point_direction(invocador.x, invocador.y, x, y);
            var xx = invocador.x + lengthdir_x(m_vision, dir);
            var yy = invocador.y + lengthdir_y(m_vision, dir);
            switch invocador.origen.jugador
            {
                case m_rojo:
                    draw_line_colour(invocador.x, invocador.y,
                        xx, yy, c_red, c_red);
                break;
                
                case m_azul:
                    draw_line_colour(invocador.x, invocador.y,
                        xx, yy, c_blue, c_blue);
                break;
                
                case m_verde:
                    draw_line_colour(invocador.x, invocador.y,
                        xx, yy, c_green, c_green);
                break;
                
                case m_amarillo:
                    draw_line_colour(invocador.x, invocador.y,
                        xx, yy, c_yellow, c_yellow);
                break;
            }
        }
    }
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
