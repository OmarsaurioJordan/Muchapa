<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oo_dibujable</parentName>
  <maskName>d_baseu</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anima = 0;
paso = 0;
vida = 0;
sube = false;
elite = 1;
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !o_game.pausa
{
    anima += delta_time;
    if anima &gt;= 100000
    {
        anima -= 100000;
        if sube
        {
            paso--;
            if paso &lt; 0
            {
                var aux = instance_create(x, y, o_papel);
                aux.clase = m_decreto;
                aux.elite = elite;
                audio_play_sound_at(a_teleporta, x, y, 0, ma_ref, ma_max, ma_fac, false, 45);
                var miid = id;
                with o_papel
                {
                    if point_distance(x, y, miid.x, miid.y) &lt;= m_vision * 0.2
                    {
                       vida = clamp(vida + miid.vida, 0, o_game.vidap[clase] * elite); 
                    }
                }
                instance_destroy();
            }
        }
        else
        {
            paso++;
            if paso &gt; 5
            {
                sube = true;
                paso = 5;
                var xx, yy;
                var freno = 0;
                do
                {
                    xx = o_camara.x - m_vision * 0.5 + irandom(m_vision);
                    yy = o_camara.y - m_vision * 0.5 + irandom(m_vision);
                    freno++;
                }
                until (!collision_circle(xx, yy, m_maxfoco * 2, o_player, true, true) and
                    !collision_line(xx, yy, o_camara.x, o_camara.y + 108, oo_bloque, true, true)) or
                    freno &gt; 20;
                if freno &gt; 20
                {
                    freno = 0;
                    do
                    {
                        xx = x - m_vision + irandom(m_vision * 2);
                        yy = y - m_vision + irandom(m_vision * 2);
                        freno++;
                    }
                    until !collision_circle(xx, yy, m_maxfoco * 2, o_player, true, true) or
                        freno &gt; 20;
                }
                if freno &gt; 20
                {
                    xx = x;
                    yy = y;
                }
                x = clamp(xx, 144, room_width - 144);
                y = clamp(yy, 432, room_height - 144);
                depth = -y;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sombra, 0, x, y);
draw_sprite(d_decreto, paso, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
