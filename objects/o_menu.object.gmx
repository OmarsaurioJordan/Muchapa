<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_leeopciones(id);
s_leejugadores(id);
s_contador_mysql(true);

version = "1.4.0";
hand_rv = -1;
s_actualizacion(id);

ini_open("config.ini");
    mapa = real(ini_read_string("config", "mapa", "0"));
    
    sonido = real(ini_read_string("config", "sonido", "2"));
    s_sonido(sonido);
ini_close();

ayuda = irandom(6);
pantallanegra = -1;
escribe = 0; //1, 2, 3, 4: para digitar nombre de cada jugador
informacion = "";
hand_rp = -1;

audio_channel_num(200);
audio_falloff_set_model(audio_falloff_linear_distance_clamped);

s_verificasubidapoints();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(a_melodia)
{
    var aux = audio_play_sound(a_melodia, 100, true);
    audio_sound_gain(aux, 0.75, 0);
    audio_stop_sound(a_musica);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if escribe != 0
{
    nombres[escribe - 1] = s_escribe(nombres[escribe - 1], 12, false, false, false);
}
else if keyboard_check_pressed(vk_anykey)
{
    informacion = "";
    switch keyboard_key
    {
        case vk_escape: //salir del juego
            s_guardanombres(id);
            s_salirjuego(id);
        break;
        
        case vk_f4: //poner o quitar pantalla completa
            s_cambiofullscreen();
        break;
        
        case vk_space: //ejecutar juego
            s_guardanombres(id);
            if !(jugadores[0] == 4 and jugadores[1] == 4 and
                jugadores[2] == 4 and jugadores[3] == 4)
            {
                s_iniciapartida(mapa);
            }
        break;
        
        case vk_f12:
            s_foto();
        break;
        
        case vk_backspace: //mas juegos web
            url_open("https://www.deviantart.com/omarsaurus");
        break;
        
        case ord('L'): //cambiar sonido
            sonido++;
            if sonido &gt; 2
            {
                sonido = 0;
            }
            s_sonido(sonido);
            ini_open("config.ini");
            ini_write_string("config", "sonido", string(sonido));
            ini_close();
        break;
    }
}

if mouse_check_button_pressed(mb_left)
{
    informacion = "";
    
    if point_distance(895, 679, mouse_x, mouse_y) &lt;= 50 //ejecutar juego
    {
        s_guardanombres(id);
        if !(jugadores[0] == 4 and jugadores[1] == 4 and
            jugadores[2] == 4 and jugadores[3] == 4)
        {
            s_iniciapartida(mapa);
        }
    }
    
    if point_distance(970, 40, mouse_x, mouse_y) &lt;= 24 //salir del juego
    {
        s_guardanombres(id);
        s_salirjuego(id);
    }
    
    if point_distance(690, 280, mouse_x, mouse_y) &lt;= 80 //cambia mapa seleccionado
    {
        if mapa &gt;= 7
        {
            mapa = 0;
        }
        else
        {
            mapa++;
        }
        ini_open("config.ini");
        ini_write_string("config", "mapa", string(mapa));
        ini_close();
        audio_play_sound(a_cambiomapa, 100, false);
    }
    
    if point_distance(248, 580, mouse_x, mouse_y) &lt;= 40 //cambia la ayuda mostrada
    {
        if ayuda &gt;= 6
        {
            ayuda = 0;
        }
        else
        {
            ayuda++;
        }
        audio_play_sound(a_cambiogeneral, 100, false);
    }
    
    for (var i = 0; i &lt; 9; i++) //chulea o deschulea una opcion del panel derecho
    {
        if point_distance(944, 120 + i * 55, mouse_x, mouse_y) &lt;= 16
        {
            if opciones[i] == 1
            {
                opciones[i] = 0;
            }
            else
            {
                opciones[i] = 1;
            }
            s_guardaopcion(i, opciones[i]);
            audio_play_sound(a_selectopc, 100, false);
            break;
        }
    }
    
    if point_distance(783, 469, mouse_x, mouse_y) &lt;= 24 //muestra estadisticas
    {
        informacion = s_estadisticas();
    }
    
    if point_distance(783, 566, mouse_x, mouse_y) &lt;= 24 and s_porlacopa2() //muestra pts online
    {
        informacion = s_leehighscore();
    }
    
    for (var i = 0; i &lt; 4; i++) //cambia clase de jugador
    {
        if point_distance(77 + i * 111, 275, mouse_x, mouse_y) &lt;= 40
        {
            if jugadores[i] &gt;= 4
            {
                jugadores[i] = 0;
            }
            else
            {
                jugadores[i]++;
            }
            s_guardajugador(i, jugadores[i]);
            audio_play_sound(a_cambioclase, 100, false);
            break;
        }
    }
    
    var escr = escribe;
    escribe = 0;
    for (var i = 0; i &lt; 4; i += 2) //cambia enfoque a escribir nombre de jugador
    {
        if point_distance(77 + i * 111, 450, mouse_x, mouse_y) &lt;= 25
        {
            escribe = i + 1;
            break;
        }
    }
    for (var i = 1; i &lt; 4; i += 2)
    {
        if point_distance(77 + i * 111, 430, mouse_x, mouse_y) &lt;= 25
        {
            escribe = i + 1;
            break;
        }
    }
    if escr != escribe
    {
        audio_play_sound(a_selectopc, 100, false);
    }
}

//temporizador pantalla negra para salir
if pantallanegra != -1
{
    pantallanegra -= delta_time;
    if pantallanegra &lt;= 0
    {
        pantallanegra = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_http_actualizacion(id);
s_http_points(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//dibujar titulo y version
draw_sprite(d_titulo, 0, 0, 0);
draw_set_valign(fa_middle);
draw_set_halign(fa_left);
if newversion
{
    draw_text_transformed_colour(430, 160, version + "#obsolete", 1.5, 1.5, 0,
        c_black, c_black, c_black, c_black, 1);
}
else
{
    draw_text_transformed_colour(430, 160, version, 1.5, 1.5, 0,
        c_black, c_black, c_black, c_black, 1);
}

//dibujar boton de info. estadisticas
if point_distance(783, 469, mouse_x, mouse_y) &gt; 24
{
    draw_sprite(d_info, 0, 783, 469);
}
else
{
    draw_sprite_ext(d_info, 0, 783, 469, 1.2, 1.2, 0, c_white, 1);
}

//dibujar boton de info. puntos online
if s_porlacopa2()
{
    if point_distance(783, 566, mouse_x, mouse_y) &gt; 24
    {
        draw_sprite(d_info, 1, 783, 566);
    }
    else
    {
        draw_sprite_ext(d_info, 1, 783, 566, 1.2, 1.2, 0, c_white, 1);
    }
}

//dibujar comandos gamepad
if point_distance(248, 580, mouse_x, mouse_y) &gt; 40
{
    draw_sprite(d_gamepad, 0, 248, 580);
}
else
{
    draw_sprite_ext(d_gamepad, 0, 248, 580, 1.2, 1.2, 0, c_white, 1);
}
if ayuda &gt; 3
{
    draw_sprite(d_comandos, 0, 82, 577);
    draw_sprite(d_comandos, ayuda - 3, 524, 574);
    draw_sprite_ext(d_seleccion, ayuda - 4, 255, 689, 0.6, 0.6, 0, c_white, 1);
}
else
{
    draw_sprite(d_comandos, 4 + ayuda, 82, 577);
    draw_sprite(d_comandos, 8 + ayuda, 524, 574);
    draw_sprite(d_player, ayuda, 255, 689);
}

//dibujar minimapa seleccionable
if point_distance(690, 280, mouse_x, mouse_y) &gt; 80
{
    draw_sprite(d_mapa, mapa, 690, 280);
}
else
{
    draw_sprite_ext(d_mapa, mapa, 690, 280, 1.2, 1.2, 0, c_white, 1);
}

//dibujar seleccion de jugadores
for (var i = 0; i &lt; 4; i++)
{
    if point_distance(77 + i * 111, 275, mouse_x, mouse_y) &gt; 40
    {
        draw_sprite(d_seleccion, jugadores[i], 77 + i * 111, 275);
    }
    else
    {
        draw_sprite_ext(d_seleccion, jugadores[i], 77 + i * 111, 275, 1.2, 1.2, 0, c_white, 1);
    }
    draw_sprite(d_player, i, 77 + i * 111, 390);
}

//dibujar nombres de jugadores
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
for (var i = 0; i &lt; 4; i += 2)
{
    var mtxt = "";
    if nombres[i] == ""
    {
        mtxt = "***clic***";
    }
    var mcol = c_black;
    if escribe - 1 == i
    {
        mcol = c_purple;
    }
    if point_distance(77 + i * 111, 450, mouse_x, mouse_y) &gt; 25
    {
        draw_text_transformed_colour(77 + i * 111, 450, nombres[i] + mtxt, 1.2, 1.2, 0,
            mcol, mcol, mcol, mcol, 1);
    }
    else
    {
        draw_text_transformed_colour(77 + i * 111, 450, nombres[i] + mtxt, 1.4, 1.4, 0,
            mcol, mcol, mcol, mcol, 1);
    }
}
for (var i = 1; i &lt; 4; i += 2)
{
    var mtxt = "";
    if nombres[i] == ""
    {
        mtxt = "***clic***";
    }
    var mcol = c_black;
    if escribe - 1 == i
    {
        mcol = c_purple;
    }
    if point_distance(77 + i * 111, 430, mouse_x, mouse_y) &gt; 25
    {
        draw_text_transformed_colour(77 + i * 111, 430, nombres[i] + mtxt, 1.2, 1.2, 0,
            mcol, mcol, mcol, mcol, 1);
    }
    else
    {
        draw_text_transformed_colour(77 + i * 111, 430, nombres[i] + mtxt, 1.4, 1.4, 0,
            mcol, mcol, mcol, mcol, 1);
    }
}

//dibujar las opciones de la derecha
for (var i = 0; i &lt; 9; i++)
{
    if point_distance(944, 120 + i * 55, mouse_x, mouse_y) &gt; 16
    {
        draw_sprite(d_opciones, i + 1, 944, 120 + i * 55);
    }
    else
    {
        draw_sprite_ext(d_opciones, i + 1, 944, 120 + i * 55, 1.2, 1.2, 0, c_white, 1);
    }
    if opciones[i] == 1
    {
        draw_sprite(d_opciones, 0, 944, 120 + i * 55);
    }
}

//dibujar boton de cerrar juego
if point_distance(970, 40, mouse_x, mouse_y) &gt; 24
{
    draw_sprite(d_exit, 0, 970, 40);
}
else
{
    draw_sprite_ext(d_exit, 0, 970, 40, 1.2, 1.2, 0, c_white, 1);
}

//dibujar boton de empezar partida
if point_distance(895, 679, mouse_x, mouse_y) &gt; 50
{
    draw_sprite(d_go, 0, 895, 679);
}
else
{
    draw_sprite_ext(d_go, 0, 895, 679, 1.2, 1.2, 0, c_white, 1);
}

//acerca de gamepad software
draw_set_valign(fa_bottom);
draw_set_halign(fa_left);
draw_text_colour(0, room_height, "You can play with our smartphone app gamepad in port: " +
    string(o_gamepad.puerto) + ", download it in +Games",
    c_black, c_black, c_black, c_black, 1);

//otros comandos de teclado
if escribe == 0
{
    draw_set_valign(fa_top);
    draw_set_halign(fa_left);
    draw_text_transformed_colour(600, 6, "F4:  Fullscreen##Tab: Pause Game" +
        "##L:   Sound##F10: Display Life##F12: Screenshot##Backspace: +Games",
        1, 1, 0, c_black, c_black, c_black, c_black, 1);
}

//dibujar ventana grande con info.
if informacion != ""
{
    draw_set_valign(fa_top);
    draw_set_halign(fa_left);
    draw_set_alpha(0.7);
    draw_rectangle_colour(room_width * 0.25, room_height * 0.25, room_width * 0.75,
        room_height * 0.75, c_teal, c_teal, c_teal, c_teal, false);
    draw_set_alpha(0.6);
    draw_rectangle_colour(room_width * 0.27, room_height * 0.27, room_width * 0.73,
        room_height * 0.73, c_aqua, c_aqua, c_aqua, c_aqua, false);
    draw_set_alpha(1);
    draw_text_transformed_colour(room_width * 0.29, room_height * 0.29, informacion, 2, 2, 0,
        c_black, c_black, c_black, c_black, 1);
}

//dibujar pantalla oscura
if pantallanegra != -1
{
    draw_set_alpha(0.5);
    draw_rectangle_colour(0, 0, room_width, room_height,
        c_black, c_black, c_black, c_black, false);
    draw_set_alpha(1);
}

//dibujar el mouse, esto va al final siempre
draw_sprite(d_mouse, 0, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
