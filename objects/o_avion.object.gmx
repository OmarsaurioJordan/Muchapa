<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oo_dibujable</parentName>
  <maskName>d_baseu</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloj = clamp(m_vuelo * (point_distance(x, y, o_camara.x, o_camara.y) / m_vision),
    m_vuelo, m_vuelo * 7);
vida = m_vidapaper;
calor = 0;
elite = 1;
ultimohot = -1;
ultimocold = -1;
mx = x;
my = y;
asenso = 126;
masalto = false;
direction = point_direction(x, y, o_camara.x, o_camara.y);
depth = -y;

o_game.enemigos++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>o_game.enemigos--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !o_game.pausa
{
    if !masalto
    {
        asenso = clamp(asenso + 5 + random(10), 126, 400);
        if asenso == 400
        {
            masalto = true;
        }
    }
    else if reloj &lt;= 1000000
    {
        asenso = clamp(asenso - 9 - random(12), 126, 400);
    }
    
    reloj -= delta_time;
    if reloj &lt;= 0
    {
        var aux = instance_create(x, y, o_papel);
        aux.clase = m_avion;
        aux.vida = vida;
        aux.elite = elite;
        aux.alarm[0] = -1;
        aux.calor = calor;
        aux.ultimohot = ultimohot;
        aux.ultimocold = ultimocold;
        audio_play_sound_at(a_aterriza, x, y, 0, ma_ref, ma_max, ma_fac, false, 20);
        instance_destroy();
    }
    else
    {
        var dir;
        var otro = instance_place(x, y, o_avion);
        if otro != noone
        {
            dir = point_direction(otro.x, otro.y, x, y);
            x += lengthdir_x(delta_time * m_velrebote, dir);
            y += lengthdir_y(delta_time * m_velrebote, dir);
        }
        if point_distance(x, y, mx, my) &gt; m_vision * 0.25
        {
            var bono = 1;
            if calor &lt;= -(o_game.calormax[m_avion] * elite)
            {
                bono *= 0.75;
            }
            if elite != 1
            {
                bono *= 2;
            }
            direction = point_direction(x, y, mx, my);
            x += lengthdir_x(delta_time * o_game.velpaper[m_avion] * 2 * bono, direction);
            y += lengthdir_y(delta_time * o_game.velpaper[m_avion] * 2 * bono, direction);
        }
        else
        {
            if point_distance(o_camara.x, o_camara.y, mx, my) &lt;= m_vision * 0.25
            {
                direction = irandom(359);
            }
            else
            {
                direction -= sign(angle_difference(direction,
                    point_direction(x, y, o_camara.x, o_camara.y))) * irandom(60);
            }
            mx = clamp(mx + lengthdir_x(m_vision * 0.25, direction), 144, room_width - 144);
            my = clamp(my + lengthdir_y(m_vision * 0.25, direction), 432, room_height - 144);
        }
        
        //limites mundo y profundidad dibujado
        var xvi = x;
        var yvi = y;
        x = clamp(x, 144, room_width - 144);
        y = clamp(y, 432, room_height - 144);
        if x != xvi or y != yvi
        {
            direction = irandom(359);
        }
        depth = -y;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sombra, 0, x, y);
var ccc = c_white;
if calor &gt;= o_game.calormax[m_avion] * elite
{
    ccc = c_gray;
}
else if calor &lt;= -(o_game.calormax[m_avion] * elite)
{
    ccc = c_miazul;
}
if elite != 1
{
    draw_sprite_ext(d_jet, s_angulo8(direction), x, y - asenso, 1, 1, 0, c_white, 1);
}
draw_sprite_ext(d_avion, s_angulo8(direction), x, y - asenso, 1, 1, 0, ccc, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
