<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oo_dibujable</parentName>
  <maskName>d_baseu</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invocador = -1;
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !o_game.pausa
{
    if !instance_exists(invocador)
    {
        instance_destroy();
    }
    else
    {
        var dir;
        var otro = instance_place(x, y, oo_bloque);
        if otro != noone
        {
            dir = point_direction(otro.x, otro.y, x, y);
            x += lengthdir_x(delta_time * m_veltijera * 0.95, dir);
            y += lengthdir_y(delta_time * m_veltijera * 0.95, dir);
        }
        
        direction = point_direction(x, y, invocador.x, invocador.y);
        x += lengthdir_x(delta_time * m_veltijera, direction);
        y += lengthdir_y(delta_time * m_veltijera, direction);
        depth = -y;
        
        if point_distance(x, y, invocador.x, invocador.y) &lt;= 36
        {
            if invocador.estado == estm_sint
            {
                invocador.estado = estm_libre;
            }
            else if invocador.estado == estm_escus
            {
                invocador.estado = estm_escut;
            }
            audio_play_sound_at(a_regresatijera, x, y, 0, ma_ref, ma_max, ma_fac, false, 50);
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(invocador)
{
    draw_sprite(d_sombra, 1, x, y);
    switch invocador.origen.jugador
    {
        case m_rojo:
            draw_sprite(d_tijeras0, 8 + s_angulo8(direction), x, y - 126); break;
        case m_azul:
            draw_sprite(d_tijeras1, 8 + s_angulo8(direction), x, y - 126); break;
        case m_verde:
            draw_sprite(d_tijeras2, 8 + s_angulo8(direction), x, y - 126); break;
        case m_amarillo:
            draw_sprite(d_tijeras3, 8 + s_angulo8(direction), x, y - 126); break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
