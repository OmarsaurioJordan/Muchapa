<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oo_dibujable</parentName>
  <maskName>d_baseu</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clase = -1;
subey = true;
aniy = 0
reloj = m_timeobjeto;
depth = -y;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var otro = collision_circle(x, y, m_maxfoco, oo_bloque, true, true);
if otro != noone
{
    direction = point_direction(otro.x, otro.y, x, y);
    x += lengthdir_x(delta_time * m_velrebote, direction);
    y += lengthdir_y(delta_time * m_velrebote, direction);
    alarm[0] = 1;
}

x = clamp(x, 144, room_width - 144);
y = clamp(y, 432, room_height - 144);
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if subey
{
    aniy += 1 + random(2);
    if aniy &gt; 40
    {
        subey = false;
    }
}
else
{
    aniy -= 1 + random(2);
    if aniy &lt;= 0
    {
        subey = true;
    }
}

if !o_game.pausa
{
    if !collision_circle(x, y, m_vision * 0.5, o_player, true, true)
    {
        if s_unorbe(id)
        {
            reloj -= delta_time * 0.25;
        }
        else
        {
            reloj -= delta_time;
        }
    }
    if reloj &lt;= 0
    {
        instance_destroy();
    }
    else
    {
        var conteo = 0;
        var miid = id;
        with o_player
        {
            if collision_circle(miid.x, miid.y, 64, id, true, false)
            {
                conteo++;
            }
        }
        if clamp(o_game.nivel, 1, 2) == clamp(conteo, 0, 2)
        {
            o_game.ajuda[4]++;
            switch clase
            {
                case mc_fuego:
                    var total = instance_number(o_papel) - 1;
                    if total != -1 { repeat ceil(o_motor.numbase)
                    {
                        with instance_find(o_papel, irandom(total))
                        {
                            calor = o_game.vidap[clase] * elite;
                            ultimohot = -1;
                        }
                    }}
                break;
                
                case mc_agua:
                    var total = instance_number(o_papel) - 1;
                    if total != -1 { repeat ceil(o_motor.numbase * 2)
                    {
                        with instance_find(o_papel, irandom(total))
                        {
                            calor = -(o_game.vidap[clase] * elite);
                            ultimocold = -1;
                        }
                    }}
                break;
                
                case mc_golpe:
                    var total;
                    repeat ceil(o_motor.numbase * 1.5)
                    {
                        total = instance_number(o_papel) - 1;
                        if total != -1 { with instance_find(o_papel, irandom(total))
                        {
                            instance_create(x, y + 10, o_braza);
                            vida = clamp(vida - m_tijerazo, 0, 10000);
                            if vida == 0
                            {
                                s_muertep(id, mu_mele);
                            }
                            else
                            {
                                audio_play_sound_at(a_impacto, x, y, 0, ma_ref, ma_max, ma_fac, false, 10);
                                golperojo = m_golperojo;
                            }
                        }}
                    }
                break;
                
                case mc_muerte:
                    var total;
                    repeat ceil(o_motor.numbase * 1.5)
                    {
                        total = instance_number(o_papel) - 1;
                        if total != -1 { with instance_find(o_papel, irandom(total))
                        {
                            s_muertep(id, mu_dist);
                        }}
                    }
                break;
                
                case mc_invisible:
                    o_game.reloj_invisible = m_timeinvivulne;
                    with o_papel
                    {
                        if estado != estp_corre
                        {
                            estado = estp_libre;
                        }
                    }
                break;
                
                case mc_invulne:
                    with o_player
                    {
                        invulnerable = m_timeinvivulne;
                    }
                break;
                
                case mc_vida:
                    s_masvida(1);
                    var aux = instance_create(x, y, o_auravida);
                    aux.reloj = m_timeinvivulne * 3;
                break;
                
                case mc_torreta:
                    var aux = instance_create(x, y, o_torreta);
                    aux.reloj = m_timeinvivulne * 2;
                break;
                
                case mc_escudo:
                    var aux = instance_create(x, y, o_escudo);
                    aux.reloj = m_timeinvivulne;
                break;
                
                case mc_cinta:
                    o_game.reloj_hielo = m_timeinvivulne;
                break;
            }
            audio_play_sound_at(a_cartapoder, x, y, 0, ma_ref, ma_max, ma_fac, false, 80);
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var alfa = clamp(reloj / 5000000, 0, 1);
draw_sprite_ext(d_sombra, 1, x, y, 1, 1, 0, c_white, alfa);
draw_sprite_ext(d_cartas, clase, x, y - 130 - aniy, 1, 1, 0, c_white, alfa);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
